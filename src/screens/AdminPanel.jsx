import React, { useEffect, useState } from "react";
import "./admin.css";
import { collection, addDoc, serverTimestamp } from "firebase/firestore";
import { db } from "../firebase";

export default function AdminPanel({ user }) {
  const [users, setUsers] = useState([]);
  const [notifText, setNotifText] = useState("");
  const [notifUser, setNotifUser] = useState("");

  useEffect(() => {
    const storedUsers = JSON.parse(localStorage.getItem("users") || "[]");
    setUsers(storedUsers);
  }, []);

  const handleDelete = (usernameToDelete) => {
    if (usernameToDelete === user.username) {
      alert("–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è.");
      return;
    }

    const updatedUsers = users.filter((u) => u.username !== usernameToDelete);
    setUsers(updatedUsers);
    localStorage.setItem("users", JSON.stringify(updatedUsers));
    alert("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω.");
  };

  const handleSendNotification = async () => {
    if (!notifText || !notifUser) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±–∞ –ø–æ–ª—è.");
      return;
    }

    try {
      await addDoc(collection(db, "notifications"), {
        userId: notifUser,
        text: notifText,
        timestamp: serverTimestamp(),
      });
      alert("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
      setNotifText("");
      setNotifUser("");
    } catch (e) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:", e);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ.");
    }
  };

  return (
    <div className="content">
      <h2>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</h2>
      <p>
        –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <strong>{user.name} {user.surname}</strong>!
      </p>
      <p>–í–∞—à–∞ —Ä–æ–ª—å: <strong>{user.role}</strong></p>

      <div className="admin-section">
        <h3>üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({users.length})</h3>
        <table className="user-table">
          <thead>
            <tr>
              <th>–ò–º—è</th>
              <th>–§–∞–º–∏–ª–∏—è</th>
              <th>–õ–æ–≥–∏–Ω</th>
              <th>–†–æ–ª—å</th>
              <th>–î–µ–π—Å—Ç–≤–∏–µ</th>
            </tr>
          </thead>
          <tbody>
            {users.map((u) => (
              <tr key={u.username}>
                <td>{u.name}</td>
                <td>{u.surname}</td>
                <td>{u.username}</td>
                <td>{u.role}</td>
                <td>
                  <button
                    className="delete-btn"
                    onClick={() => handleDelete(u.username)}
                  >
                    –£–¥–∞–ª–∏—Ç—å
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      <div className="admin-section">
        <h3>üì¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</h3>
        <input
          type="text"
          placeholder="–õ–æ–≥–∏–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—è (userId)"
          value={notifUser}
          onChange={(e) => setNotifUser(e.target.value)}
          className="admin-input"
        />
        <textarea
          placeholder="–¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
          value={notifText}
          onChange={(e) => setNotifText(e.target.value)}
          className="admin-textarea"
        />
        <button className="send-btn" onClick={handleSendNotification}>
          –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        </button>
      </div>
    </div>
  );
}
